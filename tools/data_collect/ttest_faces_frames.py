import numpy as np
import scipy.stats as stats


frame_ip = """
& 0.5112  & 0.5397  & 0.5392  & 0.4233  & 0.5478  & 0.5122 
& 0.5187  & 0.5449  & 0.5476  & 0.4539  & 0.5700  & 0.5270 
& 0.2698  & 0.2796  & 0.2495  & 0.1457  & 0.2220  & 0.2333  
& 0.5252  & 0.5914  & 0.5638  & 0.4441  & 0.5560  & 0.5361 
& 0.0283  & 0.0219  & 0.0149  & 0.0118  & 0.0180  & 0.0190  
& 0.2649  & 0.2839  & 0.2541  & 0.1825  & 0.2613  & 0.2494  
& 0.5824  & 0.6561  & 0.6100  & 0.4706  & 0.5817  & 0.5802 
"""

face_ip = """
& 0.5300 & 0.5580 & 0.5815 & 0.4493 & 0.5708 & 0.5379 
& 0.5923 & 0.6912 & 0.6436 & 0.5195 & 0.6273 & 0.6148
& 0.2223 & 0.2426 & 0.2531 & 0.1224 & 0.1942 & 0.2069
& 0.3248 & 0.3601 & 0.3601 & 0.2120 & 0.3352 & 0.3185
& 0.0256 & 0.0320 & 0.0185 & 0.0105 & 0.0184 & 0.0210    
& 0.4427 & 0.4767 & 0.4998 & 0.3230 & 0.4675 & 0.4420 
& 0.6216 & 0.6753 & 0.6836 & 0.5228 & 0.6456 & 0.6298 
"""


frame_tp = """
& 0.0235 & 0.3886 & 0.0743 & 0.2551 & -0.0780 & 0.1327
& 0.1517 & 0.2047 & -0.0037 & 0.3591 & 0.0792 & 0.1582
& -0.0494 & 0.3169 & -0.0088 & 0.1815 & 0.0541 & 0.0989
& 0.0043 & 0.0014 & 0.0028 & 0.0037 & -0.0025 & 0.0019 
& -0.008 & 0.001 & -0.0159 & -0.0047 & -0.0021 & -0.0059
& 0.0427 & 0.0888 & 0.0484 & 0.0071 & 0.0282 & 0.0430   
& 0.0642 & 0.0165 & 0.0618 & 0.0058 & -0.0029 & 0.0291  
"""

face_tp = """
& 0.0737 & 0.1403 & 0.13 & -0.0891 & 0.3505 & 0.1211
& 0.1735 & 0.349 & 0.0785 & 0.2534 & 0.202 & 0.2113 
& -0.063 & 0.1885 & 0.1271 & -0.0424 & 0.3312 & 0.1083
& -0.1089 & 0.0658 & 0.0875  & 0.1840 & -0.1289 & 0.0199
& -0.0332 & 0.0167 & 0.007 & -0.0084 & 0.0197 & 0.0003
& 0.0427 & 0.0888 & 0.0484 & 0.0071 & 0.0282 & 0.0430 
& -0.0259 & -0.0137 & 0.0038 & -0.003 & 0.0009 & -0.0076
"""



def clean_data(data):
    data = data.strip("\n")
    lines = data.split("\n")
    data = [line.replace("&", ",").strip(",") for line in lines]
    data = [[float(num) for num in line.split(",")] for line in data]
    data_arr = np.array(data)
    return data_arr


def compute_p_value(modality1, modality2):
    p_value_list = []
    for i in range(6):
        t_stat, p_value = stats.ttest_rel(modality1[:, i], modality2[:, i])
        p_value_list.append(p_value)
    print(p_value_list)


def print_latex_table(modality1, modality2):
    for i in range(6):
        t_stat, p_value = stats.ttest_rel(modality1[:, i], modality2[:, i])
        print(f"{p_value:.6f} & ", end="")


frame = clean_data(frame_tp)
face = clean_data(face_tp)

print_latex_table(frame, face)
