import numpy as np
import scipy.stats as stats


afp_ip = """
& 0.5636 & 0.5748 & 0.6007 & 0.4875 & 0.6196 & 0.5692
& 0.4346 & 0.3635 & 0.4106 & 0.2860 & 0.4349 & 0.3859
& 0.5110 & 0.4753 & 0.4823 & 0.3668 & 0.5412 & 0.4753
& 0.2838 & 0.2883 & 0.3589 & 0.1663 & 0.2822 & 0.2759
& 0.5743 & 0.5751 & 0.6169 & 0.5018 & 0.6373 & 0.5811
& 0.5027 & 0.5258 & 0.5397 & 0.4413 & 0.5684 & 0.5156
& 0.5178 & 0.5454 & 0.5494 & 0.4600 & 0.5783 & 0.5302
& 0.2580 & 0.2718 & 0.2368 & 0.1435 & 0.2183 & 0.2257
"""

lrp_ip = """
& 0.5302 &   0.6107 &  0.5695 &  0.4803 &  0.5626 &  0.5507
& 0.3404 &   0.3260 &  0.3120 &  0.1986 &  0.3460 &  0.3046
& 0.4803 &   0.4716 &  0.4351 &  0.3168 &  0.5014 &  0.4411
& 0.2649 &   0.3447 &  0.2939 &  0.1623 &  0.2578 &  0.2647
& 0.5705 &   0.6608 &  0.6254 &  0.4854 &  0.5805 &  0.5845
& 0.4859 &   0.5254 &  0.5186 &  0.4165 &  0.5184 &  0.493
& 0.4769 &   0.5081 &  0.5242 &  0.4217 &  0.5299 &  0.4922
& 0.2236 &   0.2486 &  0.2096 &  0.1170 &  0.1802 &  0.1958
"""


mlp_ip = """
& 0.5151 &   0.5310 &  0.5216 &  0.4549 &  0.5478 &  0.5141
& 0.4291 &   0.3547 &  0.4003 &  0.2733 &  0.4279 &  0.3771
& 0.5193 &   0.4826 &  0.4876 &  0.3723 &  0.5462 &  0.4816
& 0.2924 &   0.2912 &  0.3623 &  0.1678 &  0.2856 &  0.2799
& 0.5713 &   0.5843 &  0.6162 &  0.5002 &  0.6345 &  0.5813
& 0.5084 &   0.5273 &  0.5445 &  0.4430 &  0.5673 &  0.5181
& 0.5215 &   0.5448 &  0.5547 &  0.4666 &  0.5821 &  0.5339
& 0.2280 &   0.2522 &  0.2211 &  0.1346 &  0.1997 &  0.2071
"""

sfp_ip = """
& 0.5746 & 0.6427 & 0.6133 & 0.4833 & 0.6004 & 0.5829 
& 0.4420 & 0.3923 & 0.4167 & 0.2934 & 0.4455 & 0.3980 
& 0.5302 & 0.5216 & 0.5135 & 0.4111 & 0.5250 & 0.5003 
& 0.2888 & 0.3381 & 0.3616 & 0.1893 & 0.2627 & 0.2881 
& 0.6008 & 0.6684 & 0.6453 & 0.5133 & 0.6311 & 0.6118 
& 0.5148 & 0.5422 & 0.5430 & 0.4268 & 0.5504 & 0.5154 
& 0.5173 & 0.5458 & 0.5476 & 0.4564 & 0.5691 & 0.5273 
& 0.2640 & 0.2743 & 0.2435 & 0.1421 & 0.2166 & 0.2281  
"""

# --------------------------------------------
afp_tp = """
& -0.0172 &   0.0867 &  0.0250 &  0.0136 &  0.2583 &  0.0733
& -0.0582 &   0.4203 &  0.0425 &  0.0923 &  0.0178 &  0.103
& -0.001 &   -0.0282 & -0.0004 &  -0.002 & -0.0568 &  -0.0177
& -0.0063 &   0.0005 & -0.0000 &  0.0006 & -0.0003 &  -0.0011
& -0.0058 &   0.0009 & -0.0044 &  0.0112 &  0.0006 &  0.0005
& 0.0029 &   -0.0062 & -0.0024 &  0.0024 & -0.0179 &  -0.0042
& 0.0362 &    0.0083 &  0.0047 & -0.0057 & -0.0253 &  0.0037
& 0.0001 &   -0.0094 &  0.0020 &  0.0013 & -0.0221 &  -0.0056
"""


lrp_tp = """
& -0.0011 &   0.0023 &  -0.0003 &  0.0026 &  -0.0010 &  0.0005
& -0.0 &     -0.0003 &  -0.0005 &  0.0016 &  -0.0036 &  -0.0006
& 0.0536 &    0.2384 &  0.0889  & -0.1535 &   0.2486 &  0.0952
& 0.0397 &   -0.0144 &  0.0424  &  0.1846 &   0.0667 &  0.0638
& 0.1327 &    0.4149 &  0.22    &  0.1146 &  -0.1162 &  0.1532
& -0.0023 &   0.4281 &  0.0586  &  0.1642 &  -0.1682 &  0.0961
& 0.1717 &    0.2617 &  0.0914  &  0.2903 &   0.0598 &  0.175
& -0.0734 &   0.2527 &  -0.0105 &  0.1564 &  -0.0354 &  0.058
"""


mlp_tp = """
& 0.0316 &   0.0049 &  0.0165  &  0.0179 &  -0.0202 &  0.0101
& 0.0173 &   0.1450 &  -0.0137 &  0.0263 &  -0.0407 &  0.0268
& 0.0589 &   0.1008 &  0.1335  &  0.0469 &  -0.0087 &  0.0663
& 0.151 &    0.0337 &  0.0199  &  0.0466 &   0.0049 &  0.0512
& 0.1147 &   0.1803 &  -0.0106 &  0.1938 &  -0.0767 &  0.0803
& 0.1333 &   0.2596 &  -0.0068 &  0.1566 &  -0.0895 &  0.0907
& 0.2223 &   0.0707 &  -0.0388 &  0.1165 &   0.0610 &  0.0863
& 0.0744 &  -0.0048 &  -0.0091 & -0.0514 &   0.0216 &  0.0061
"""


sfp_tp = """
& 0.0168  & -0.0457  &  0.0902   &  0.0186   &  -0.0366   &  0.0087
& 0.1751  & 0.5174   &  -0.0718  &  0.1940   &  -0.0542   &  0.1521
& 0.0420  & 0.0452   &  -0.0214  &  0.0186   &  -0.0982   &  -0.0028
& 0.1093  & -0.0661  &  0.0208   & -0.0527   &  0.0130    &  0.0049
& 0.0189  & 0.0059   &  0.0039   &  0.0033   &  0.0986    &  0.0261
& 0.0506  & -0.0289  &  0.0002   &  0.0116   &  -0.1435   &  -0.022
& 0.0187  & 0.0705   &  0.0733   & -0.0169   &  0.0145    &  0.032
& -0.0014 & -0.0066  &  0.0002   &  0.0023   &  0.0011    &  -0.0009
"""


def clean_data(data):
    data = data.strip("\n")
    lines = data.split("\n")
    data = [line.replace("&", ",").strip(",") for line in lines]
    data = [[float(num) for num in line.split(",")] for line in data]
    data_arr = np.array(data)
    return data_arr


def compute_p_value(modality1, modality2):
    p_value_list = []
    for i in range(6):
        t_stat, p_value = stats.ttest_rel(modality1[:, i], modality2[:, i])
        p_value_list.append(p_value)
    print(p_value_list)


def print_latex_table(modality1, modality2):
    for i in range(6):
        t_stat, p_value = stats.ttest_rel(modality1[:, i], modality2[:, i])
        print(f"{p_value:.6f} & ", end="")
    print()


def compute_2_clip(clip_1, clip_2):
    clip_1 = clean_data(clip_1)
    clip_2 = clean_data(clip_2)
    print_latex_table(clip_1, clip_2)


if __name__ == '__main__':
    compute_2_clip(sfp_ip, afp_ip)
    compute_2_clip(sfp_ip, lrp_ip)
    compute_2_clip(sfp_ip, mlp_ip)
    print("-------------------")
    compute_2_clip(sfp_tp, afp_tp)
    compute_2_clip(sfp_tp, lrp_tp)
    compute_2_clip(sfp_tp, mlp_tp)
